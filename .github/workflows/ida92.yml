name: Build Yagi for IDA 9.2

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (Release/Debug)'
        required: false
        default: 'Release'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-22.04]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Yagi
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Checkout IDA 9.2 SDK
        uses: actions/checkout@v4
        with:
          repository: HexRaysSA/ida-sdk
          path: ida-sdk

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake flex bison git ccache

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          curl -L -o winflexbison.zip https://github.com/lexxmark/winflexbison/releases/download/v2.5.24/win_flex_bison-2.5.24.zip
          mkdir C:\winflexbison
          tar -xf winflexbison.zip -C C:\winflexbison
          echo "C:\winflexbison" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Configure CMake (Windows)
        if: matrix.os == 'windows-latest'
        run: cmake -S ${{ github.workspace }}\Yagi -B build_yagi ^
             -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type }} ^
             -DIDA_SDK_SOURCE_DIR=${{ github.workspace }}\ida-sdk ^
             -DCPACK_PACKAGE_INSTALL_DIRECTORY="IDA Pro 9.2"
        shell: cmd

      - name: Configure CMake (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: cmake -S ${{ github.workspace }}/Yagi -B build_yagi \
             -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type }} \
             -DIDA_SDK_SOURCE_DIR=${{ github.workspace }}/ida-sdk \
             -DCPACK_PACKAGE_INSTALL_DIRECTORY="IDA Pro 9.2"

      - name: Build
        run: cmake --build build_yagi --target package --config ${{ github.event.inputs.build_type }}

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: yagi-win64
          path: build_yagi/*.msi

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: yagi-linux64
          path: build_yagi/*.sh
